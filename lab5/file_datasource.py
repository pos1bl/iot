from csv import reader

class FileDatasource:
    def __init__(self, gps_filename: str, road_state_filename: str) -> None:
        self.gps_filename = gps_filename
        self.road_state_filename = road_state_filename
        self.gps_data = []
        self.road_state_data = []
        self.index = 0
        self.counter = 0

    def startReading(self):
        self.gps_data = self._load_csv(self.gps_filename)
        self.road_state_data = self._load_csv(self.road_state_filename)
        self.index = 0

        print(f"üìå –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ {len(self.gps_data)} –∑–∞–ø–∏—Å—ñ–≤ GPS")
        print(f"üìå –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ {len(self.road_state_data)} –∑–∞–ø–∏—Å—ñ–≤ —Å—Ç–∞–Ω—É –¥–æ—Ä–æ–≥–∏")



    def stopReading(self):
        """–û—á–∏—â—É—î–º–æ –¥–∞–Ω—ñ"""
        self.gps_data = []
        self.road_state_data = []
        self.index = 0
        print("üìå –û—á–∏—Å—Ç–∫—É –¥–∞–Ω–∏—Ö –∑—É–ø–∏–Ω–µ–Ω–æ")

    def _load_csv(self, filename):
        """–ß–∏—Ç–∞—î CSV-—Ñ–∞–π–ª —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ —Ä—è–¥–∫—ñ–≤"""
        try:
            with open(filename, "r", encoding="utf-8") as file:
                csv_reader = reader(file)
                next(csv_reader)
                return [row for row in csv_reader if row]
        except FileNotFoundError:
            print(f"‚ùå –§–∞–π–ª {filename} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
            return []

#get_new_points –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑—ñ —Å–ø—Ä–∞–≤–∂–Ω—ñ–º–∏ –¥–∞–Ω–∏–º–∏
    def get_points(self):
        """–ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ —Ç–æ—á–æ–∫ GPS —Ç–∞ —Å—Ç–∞–Ω—É –¥–æ—Ä–æ–≥–∏ —É —Ñ–æ—Ä–º–∞—Ç—ñ (latitude, longitude, road_state)"""
        points = []
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —â–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–ø–∏—Å—ñ–≤ –≤ GPS —ñ —Å—Ç–∞–Ω—ñ –¥–æ—Ä–æ–≥–∏ –æ–¥–Ω–∞–∫–æ–≤–∞
        if len(self.gps_data) == len(self.road_state_data):
            for i in range(len(self.gps_data)):
                try:
                    latitude = float(self.gps_data[i][0])  # –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ —É float
                    longitude = float(self.gps_data[i][1])  # –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ —É float
                    road_state = (self.road_state_data[i][0])  # –ë–µ—Ä–µ–º–æ –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç
                    points.append((latitude, longitude, road_state))
                except ValueError:
                    print(f"‚ö†Ô∏è –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω—ñ –¥–∞–Ω—ñ –≤ GPS —Ñ–∞–π–ª—ñ: {self.gps_data[i]}")
        else:
            print("‚ö†Ô∏è –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–ø–∏—Å—ñ–≤ –≤ GPS —Ç–∞ —Ñ–∞–π–ª—ñ —Å—Ç–∞–Ω—É –¥–æ—Ä–æ–≥–∏ –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—î.")
        return points

#get_new_points –∑—ñ —à—Ç—É—á–Ω–∏–º –æ–±–º–µ–∂–µ–Ω–Ω—è–º –≤–∏–¥–∞–Ω–∏—Ö –¥–∞–Ω–∏—Ö –¥–ª—è —Å–∏–º—É–ª—è—Ü—ñ—ó —Ä–µ–∞–ª—å–Ω–æ—ó —Ä–æ–±–æ—Ç–∏ –∑–∞—Å—Ç–æ—Å—É–Ω–∫—É
    def get_new_points(self):
      points = []
      if self.counter < len(self.gps_data):
          for i in range(1):
              if self.counter < len(self.gps_data):
                  try:
                      latitude = float(self.gps_data[self.counter][0])
                      longitude = float(self.gps_data[self.counter][1])
                      road_state = (self.road_state_data[self.counter][0])
                      points.append((latitude, longitude, road_state))
                      self.counter += 1  # –ó–±—ñ–ª—å—à—É—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫
                  except ValueError:
                      print(f"‚ö†Ô∏è –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω—ñ –¥–∞–Ω—ñ –≤ GPS —Ñ–∞–π–ª—ñ: {self.gps_data[self.counter]}")
      return points

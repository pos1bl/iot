from csv import reader
from datetime import datetime
from domain.accelerometer import Accelerometer
from domain.gps import Gps
from domain.aggregated_data import AggregatedData
from domain.parking import Parking

class FileDatasource:
    def __init__(self, accelerometer_filename: str, gps_filename: str, parking_filename: str) -> None:
        self.accelerometer_filename = accelerometer_filename
        self.gps_filename = gps_filename
        self.parking_filename = parking_filename
        self.accelerometer_data = []
        self.gps_data = []
        self.parking_data = []
        self.index = 0

    def startReading(self):
        self.accelerometer_data = self._load_csv(self.accelerometer_filename)
        self.gps_data = self._load_csv(self.gps_filename)
        self.parking_data = self._load_csv(self.parking_filename)
        self.index = 0

        print(f"üìå –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(self.accelerometer_data)} –∑–∞–ø–∏—Å–µ–π –∞–∫—Å–µ–ª–µ—Ä–æ–º–µ—Ç—Ä–∞")
        print(f"üìå –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(self.gps_data)} –∑–∞–ø–∏—Å–µ–π GPS")
        print(f"üìå –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(self.parking_data)} –∑–∞–ø–∏—Å–µ–π –ø–∞—Ä–∫–∏–Ω–≥–∞")

    def read(self):
        if self.index >= len(self.accelerometer_data) or self.index >= len(self.gps_data) or self.index >= len(self.parking_data):
            print("‚ö†Ô∏è –î–∞–Ω–Ω—ñ –∑–∞–∫—ñ–Ω—á–∏–ª–∏—Å—å, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø—É—Å—Ç–∏–π –æ–±'—î–∫—Ç")
            return AggregatedData(Accelerometer(0, 0, 0), Gps(0, 0), datetime.now()),  None

        acc_values = self.accelerometer_data[self.index]
        gps_values = self.gps_data[self.index]
        parking_values = self.parking_data[self.index]
        self.index += 1

        aggregated_data = AggregatedData(
            Accelerometer(float(acc_values[0]), float(acc_values[1]), float(acc_values[2])),
            Gps(float(gps_values[0]), float(gps_values[1])),
            datetime.now(),
        )

        parking_data = Parking(
            int(parking_values[0]),
            Gps(float(parking_values[1]), float(parking_values[2]))
        )

        return aggregated_data, parking_data

    def stopReading(self):
        """–û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ"""
        self.accelerometer_data = []
        self.gps_data = []
        self.parking_data = []
        self.index = 0
        print("üìå –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")

    def _load_csv(self, filename):
        """–ß–∏—Ç–∞–µ—Ç CSV-—Ñ–∞–π–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫"""
        try:
            with open(filename, "r", encoding="utf-8") as file:
                csv_reader = reader(file)
                next(csv_reader)  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
                return [row for row in csv_reader if row]
        except FileNotFoundError:
            print(f"‚ùå –§–∞–π–ª {filename} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return []